<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qr.contract.dao.ContractRecordMapper">
  <resultMap id="BaseResultMap" type="com.qr.contract.entity.ContractRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="contract_type" jdbcType="INTEGER" property="contractType" />
    <result column="contract_url" jdbcType="VARCHAR" property="contractUrl" />
    <result column="e_tag" jdbcType="VARCHAR" property="eTag" />
    <result column="have_template" jdbcType="INTEGER" property="haveTemplate" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="system_code" jdbcType="VARCHAR" property="systemCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, created_date, modified_date, content, contract_name, contract_type, contract_url, 
    e_tag, have_template, template_code, system_code
  </sql>
  <select id="selectByExample" parameterType="com.qr.contract.entity.ContractRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ct_contract_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ct_contract_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ct_contract_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qr.contract.entity.ContractRecordExample">
    delete from ct_contract_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qr.contract.entity.ContractRecord">
    insert into ct_contract_record (id, created_date, modified_date, 
      content, contract_name, contract_type, 
      contract_url, e_tag, have_template, 
      template_code, system_code)
    values (#{id,jdbcType=BIGINT}, #{createdDate,jdbcType=TIMESTAMP}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR}, #{contractName,jdbcType=VARCHAR}, #{contractType,jdbcType=INTEGER}, 
      #{contractUrl,jdbcType=VARCHAR}, #{eTag,jdbcType=VARCHAR}, #{haveTemplate,jdbcType=INTEGER}, 
      #{templateCode,jdbcType=VARCHAR}, #{systemCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qr.contract.entity.ContractRecord">
    insert into ct_contract_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="contractType != null">
        contract_type,
      </if>
      <if test="contractUrl != null">
        contract_url,
      </if>
      <if test="eTag != null">
        e_tag,
      </if>
      <if test="haveTemplate != null">
        have_template,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="systemCode != null">
        system_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contractUrl != null">
        #{contractUrl,jdbcType=VARCHAR},
      </if>
      <if test="eTag != null">
        #{eTag,jdbcType=VARCHAR},
      </if>
      <if test="haveTemplate != null">
        #{haveTemplate,jdbcType=INTEGER},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="systemCode != null">
        #{systemCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qr.contract.entity.ContractRecordExample" resultType="java.lang.Long">
    select count(*) from ct_contract_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ct_contract_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedDate != null">
        modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.contractName != null">
        contract_name = #{record.contractName,jdbcType=VARCHAR},
      </if>
      <if test="record.contractType != null">
        contract_type = #{record.contractType,jdbcType=INTEGER},
      </if>
      <if test="record.contractUrl != null">
        contract_url = #{record.contractUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.eTag != null">
        e_tag = #{record.eTag,jdbcType=VARCHAR},
      </if>
      <if test="record.haveTemplate != null">
        have_template = #{record.haveTemplate,jdbcType=INTEGER},
      </if>
      <if test="record.templateCode != null">
        template_code = #{record.templateCode,jdbcType=VARCHAR},
      </if>
      <if test="record.systemCode != null">
        system_code = #{record.systemCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ct_contract_record
    set id = #{record.id,jdbcType=BIGINT},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      modified_date = #{record.modifiedDate,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      contract_name = #{record.contractName,jdbcType=VARCHAR},
      contract_type = #{record.contractType,jdbcType=INTEGER},
      contract_url = #{record.contractUrl,jdbcType=VARCHAR},
      e_tag = #{record.eTag,jdbcType=VARCHAR},
      have_template = #{record.haveTemplate,jdbcType=INTEGER},
      template_code = #{record.templateCode,jdbcType=VARCHAR},
      system_code = #{record.systemCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qr.contract.entity.ContractRecord">
    update ct_contract_record
    <set>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="contractName != null">
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        contract_type = #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contractUrl != null">
        contract_url = #{contractUrl,jdbcType=VARCHAR},
      </if>
      <if test="eTag != null">
        e_tag = #{eTag,jdbcType=VARCHAR},
      </if>
      <if test="haveTemplate != null">
        have_template = #{haveTemplate,jdbcType=INTEGER},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="systemCode != null">
        system_code = #{systemCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qr.contract.entity.ContractRecord">
    update ct_contract_record
    set created_date = #{createdDate,jdbcType=TIMESTAMP},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=INTEGER},
      contract_url = #{contractUrl,jdbcType=VARCHAR},
      e_tag = #{eTag,jdbcType=VARCHAR},
      have_template = #{haveTemplate,jdbcType=INTEGER},
      template_code = #{templateCode,jdbcType=VARCHAR},
      system_code = #{systemCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>